name: Debug ESP32S3 Build

on:
  workflow_dispatch:  # 只允许手动触发
  
env:
  IDF_VERSION: 'v5.5.1'

jobs:
  debug-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Debug - Show environment
      run: |
        echo "=== Environment Debug ==="
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo ""
        echo "Python version: $(python --version)"
        echo "Python path: $(which python)"
        echo ""
        echo "Git status:"
        git status --porcelain || echo "No git repo"
        echo ""
        echo "=== Project Files ==="
        echo "CMakeLists.txt exists: $([ -f CMakeLists.txt ] && echo 'YES' || echo 'NO')"
        echo "sdkconfig.defaults exists: $([ -f sdkconfig.defaults ] && echo 'YES' || echo 'NO')"
        echo "main/ directory exists: $([ -d main ] && echo 'YES' || echo 'NO')"
        if [ -f "main/idf_component.yml" ]; then
          echo "Component dependencies:"
          cat main/idf_component.yml
        fi
    
    - name: Install ESP-IDF
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: ${{ env.IDF_VERSION }}
        target: esp32s3
    
    - name: Debug - ESP-IDF environment
      run: |
        echo "=== ESP-IDF Debug ==="
        echo "IDF_PATH: $IDF_PATH"
        echo "IDF_PATH exists: $([ -d "$IDF_PATH" ] && echo 'YES' || echo 'NO')"
        . $IDF_PATH/export.sh
        echo "After sourcing export.sh:"
        echo "IDF version: $(idf.py --version)"
        echo "Python in PATH: $(which python)"
        echo "ESP-IDF tools available:"
        which idf.py || echo "idf.py not found"
        which esptool.py || echo "esptool.py not found"
        
    - name: Configure project (debug mode)
      run: |
        . $IDF_PATH/export.sh
        echo "=== Configuration Debug ==="
        echo "Setting target to esp32s3..."
        idf.py set-target esp32s3 -v
        echo ""
        echo "Generated sdkconfig:"
        if [ -f sdkconfig ]; then
          echo "sdkconfig file size: $(wc -l < sdkconfig) lines"
          echo "First 10 lines of sdkconfig:"
          head -10 sdkconfig
        else
          echo "❌ sdkconfig file not generated!"
        fi
        
    - name: Try minimal build
      run: |
        . $IDF_PATH/export.sh
        echo "=== Build Debug ==="
        echo "Attempting build with verbose output..."
        idf.py build -v || {
          echo "❌ Build failed!"
          echo "=== Build directory contents ==="
          ls -la build/ 2>/dev/null || echo "Build directory doesn't exist"
          echo "=== CMake cache ==="
          cat build/CMakeCache.txt 2>/dev/null || echo "No CMakeCache.txt"
          echo "=== Config files ==="
          ls -la build/config/ 2>/dev/null || echo "No config directory"
          exit 1
        }
        
    - name: Check build results
      run: |
        echo "=== Build Results ==="
        echo "Build directory contents:"
        ls -la build/
        echo ""
        echo "Binary files:"
        find build/ -name "*.bin" -exec ls -la {} \;
        echo ""
        echo "ELF files:"
        find build/ -name "*.elf" -exec ls -la {} \;
        
    - name: Upload debug logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: debug-logs-${{ github.run_number }}
        path: |
          build/CMakeCache.txt
          build/config/
          sdkconfig
          *.log
        retention-days: 7